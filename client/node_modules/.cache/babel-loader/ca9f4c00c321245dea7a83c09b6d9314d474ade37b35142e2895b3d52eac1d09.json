{"ast":null,"code":"import NotificationTable from\"../../components/ui/NotificationTable\";import React,{useState,useContext,useEffect}from\"react\";import{ThemeContext}from\"../../context/Theme\";import{UserContext}from\"../../context/User\";import{SuccessContext}from\"../../context/Success\";import{AlertsContext}from\"../../context/Alerts\";import axios from\"axios\";import API from\"../../service/API\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Notification=_ref=>{let{setSelected,setNotificationselected}=_ref;const[theme,setTheme]=useContext(ThemeContext);const[notifications,setNotification]=useState(null);const[user,setUser]=useContext(UserContext);const[success,setSuccess]=useContext(SuccessContext);const[errors,setErrors]=useContext(AlertsContext);const authToken=localStorage.getItem(\"authToken\");const refreshToken=localStorage.getItem(\"refreshToken\");const serverUrl=process.env.REACT_APP_SERVER_URL;const[isloading,setIsloading]=useState(true);useEffect(()=>{const handleViewNotification=async()=>{setErrors([]);setSuccess(false);const config={url:`${serverUrl}/notification/view`,method:\"GET\",data:{}};const{res,error,loading}=await API(config);if(res){setIsloading(false);setUser(res.data.account);setNotification(res.data.notifications);}if(error)console.log(error);};handleViewNotification();},[]);// Dependencies to rerun effect only when these values change\nreturn/*#__PURE__*/_jsxs(\"div\",{className:`col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `,children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex w-full text-xl rounded-xl h-16 shadow-md bg-fantasy p-4 pl-4 font-bold\",children:\"Notification\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end px-9 py-3\",children:user.role!=\"P\"&&/*#__PURE__*/_jsx(\"button\",{id:\"btn_AddNotification\",onClick:()=>{setSelected(\"AddNotification\");},className:\"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\",children:\"Add Notification\"})}),/*#__PURE__*/_jsx(NotificationTable,{setSelected:setSelected,notifications:notifications,setNotificationselected:setNotificationselected})]});};","map":{"version":3,"names":["NotificationTable","React","useState","useContext","useEffect","ThemeContext","UserContext","SuccessContext","AlertsContext","axios","API","jsx","_jsx","jsxs","_jsxs","Notification","_ref","setSelected","setNotificationselected","theme","setTheme","notifications","setNotification","user","setUser","success","setSuccess","errors","setErrors","authToken","localStorage","getItem","refreshToken","serverUrl","process","env","REACT_APP_SERVER_URL","isloading","setIsloading","handleViewNotification","config","url","method","data","res","error","loading","account","console","log","className","children","role","id","onClick"],"sources":["D:/PUGADMAHARLIKA/Pugad-Maharlika-Frontend/client/src/pages/admin/Notification.jsx"],"sourcesContent":["import NotificationTable from \"../../components/ui/NotificationTable\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../context/Theme\";\r\nimport { UserContext } from \"../../context/User\";\r\nimport { SuccessContext } from \"../../context/Success\";\r\nimport { AlertsContext } from \"../../context/Alerts\";\r\nimport axios from \"axios\";\r\nimport API from \"../../service/API\";\r\n\r\nexport const Notification = ({ setSelected, setNotificationselected }) => {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n  const [notifications, setNotification] = useState(null);\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [success, setSuccess] = useContext(SuccessContext);\r\n  const [errors, setErrors] = useContext(AlertsContext);\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  const refreshToken = localStorage.getItem(\"refreshToken\");\r\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\r\n  const [isloading, setIsloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const handleViewNotification = async () => {\r\n      setErrors([]);\r\n      setSuccess(false);\r\n      const config = {\r\n        url: `${serverUrl}/notification/view`,\r\n        method: \"GET\",\r\n        data: {},\r\n      };\r\n\r\n      const { res, error, loading } = await API(config);\r\n      if (res) {\r\n        setIsloading(false);\r\n        setUser(res.data.account);\r\n        setNotification(res.data.notifications);\r\n      }\r\n      if (error) console.log(error);\r\n    };\r\n    handleViewNotification();\r\n  }, []); // Dependencies to rerun effect only when these values change\r\n\r\n  return (\r\n    <div\r\n      className={`col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `}\r\n    >\r\n      <div className=\"flex w-full text-xl rounded-xl h-16 shadow-md bg-fantasy p-4 pl-4 font-bold\">\r\n        Notification\r\n      </div>\r\n      <div className=\"flex justify-end px-9 py-3\">\r\n        {user.role != \"P\" && (\r\n          <button\r\n            id=\"btn_AddNotification\"\r\n            onClick={() => {\r\n              setSelected(\"AddNotification\");\r\n            }}\r\n            className=\"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\"\r\n          >\r\n            Add Notification\r\n          </button>\r\n        )}\r\n      </div>\r\n      <NotificationTable\r\n        setSelected={setSelected}\r\n        notifications={notifications}\r\n        setNotificationselected={setNotificationselected}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}