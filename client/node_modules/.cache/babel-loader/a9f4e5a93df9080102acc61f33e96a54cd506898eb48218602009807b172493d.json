{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Pugad Testing\\\\Pugad-Maharlika-Frontend\\\\client\\\\src\\\\pages\\\\admin\\\\SalesAndRevenueChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\nconst SalesAndRevenueChart = ({\n  theme\n}) => {\n  _s();\n  const [data, setData] = useState({\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [{\n      label: \"Sales\",\n      data: [120, 150, 200, 180, 250, 300, 350, 400, 450, 500, 550, 600],\n      borderColor: \"#42A5F5\",\n      backgroundColor: \"rgba(66, 165, 245, 0.2)\",\n      fill: true\n    }, {\n      label: \"Revenue\",\n      data: [1000, 1200, 1500, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000, 3200],\n      borderColor: \"#66BB6A\",\n      backgroundColor: \"rgba(102, 187, 106, 0.2)\",\n      fill: true\n    }]\n  });\n  const [options, setOptions] = useState({\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Sales and Revenue Chart\"\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Month\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Amount\"\n        }\n      }\n    }\n  });\n\n  // You can add logic here to update the chart data dynamically\n  useEffect(() => {\n    // Any dynamic data fetching or updates can go here\n  }, []);\n\n  // Define colors based on the theme\n  const themeColors = theme === \"night\" ? {\n    topBorderColor: \"#1F2937\",\n    // Dark background color for the top border\n    bgColor: \"#1F2937\",\n    // Dark background color\n    textColor: \"#E5E7EB\" // Light text color for the dark theme\n  } : {\n    topBorderColor: \"#66BB6A\",\n    // Lighter border for the \"fantasy\" theme\n    bgColor: \"#FFFFFF\",\n    // White background for the \"fantasy\" theme\n    textColor: \"#1F2937\" // Dark text color for the light theme\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    style: {\n      padding: \"20px\",\n      backgroundColor: themeColors.bgColor,\n      color: themeColors.textColor,\n      borderTop: `5px solid ${themeColors.topBorderColor}`,\n      borderRadius: \"10px\",\n      maxWidth: \"900px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales and Revenue Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesAndRevenueChart, \"2TmFHCIGEh0VP9ClJXCx5PsDP9s=\");\n_c = SalesAndRevenueChart;\nexport default SalesAndRevenueChart;\nvar _c;\n$RefreshReg$(_c, \"SalesAndRevenueChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","SalesAndRevenueChart","theme","_s","data","setData","labels","datasets","label","borderColor","backgroundColor","fill","options","setOptions","responsive","plugins","legend","position","title","display","text","scales","x","y","themeColors","topBorderColor","bgColor","textColor","className","style","padding","color","borderTop","borderRadius","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/Pugad Testing/Pugad-Maharlika-Frontend/client/src/pages/admin/SalesAndRevenueChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register necessary components for Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst SalesAndRevenueChart = ({ theme }) => {\r\n  const [data, setData] = useState({\r\n    labels: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Sales\",\r\n        data: [120, 150, 200, 180, 250, 300, 350, 400, 450, 500, 550, 600],\r\n        borderColor: \"#42A5F5\",\r\n        backgroundColor: \"rgba(66, 165, 245, 0.2)\",\r\n        fill: true,\r\n      },\r\n      {\r\n        label: \"Revenue\",\r\n        data: [\r\n          1000, 1200, 1500, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000,\r\n          3200,\r\n        ],\r\n        borderColor: \"#66BB6A\",\r\n        backgroundColor: \"rgba(102, 187, 106, 0.2)\",\r\n        fill: true,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [options, setOptions] = useState({\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Sales and Revenue Chart\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Month\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Amount\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  // You can add logic here to update the chart data dynamically\r\n  useEffect(() => {\r\n    // Any dynamic data fetching or updates can go here\r\n  }, []);\r\n\r\n  // Define colors based on the theme\r\n  const themeColors =\r\n    theme === \"night\"\r\n      ? {\r\n          topBorderColor: \"#1F2937\", // Dark background color for the top border\r\n          bgColor: \"#1F2937\", // Dark background color\r\n          textColor: \"#E5E7EB\", // Light text color for the dark theme\r\n        }\r\n      : {\r\n          topBorderColor: \"#66BB6A\", // Lighter border for the \"fantasy\" theme\r\n          bgColor: \"#FFFFFF\", // White background for the \"fantasy\" theme\r\n          textColor: \"#1F2937\", // Dark text color for the light theme\r\n        };\r\n\r\n  return (\r\n    <div\r\n      className=\"chart-container\"\r\n      style={{\r\n        padding: \"20px\",\r\n        backgroundColor: themeColors.bgColor,\r\n        color: themeColors.textColor,\r\n        borderTop: `5px solid ${themeColors.topBorderColor}`,\r\n        borderRadius: \"10px\",\r\n        maxWidth: \"900px\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      <h2>Sales and Revenue Chart</h2>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesAndRevenueChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}