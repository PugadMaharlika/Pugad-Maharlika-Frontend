{"ast":null,"code":"import axios from\"axios\";const API=async function(axiosConfig){let shouldFetch=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;let overrideConfig=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};let res=null;let error=null;let loading=false;axiosConfig.headers={\"Content-Type\":\"application/json\",\"x-auth-token\":localStorage.getItem(\"authToken\"),\"x-refresh-token\":localStorage.getItem(\"refreshToken\")};if(shouldFetch){loading=true;try{const response=await axios({...axiosConfig,...overrideConfig});res=response;error=null;}catch(err){error=err;}finally{loading=false;}}return{res,error,loading};};export default API;// import API from \"../../service/API\";\n// async function sendresponse() {\n//   const axiosConfig = {\n//     url: \"https://api.example.com/submit\",\n//     method: \"POST\",\n//     response: {  // The response you want to post\n//       name: \"John Doe\",\n//       email: \"john.doe@example.com\",\n//     },\n//     headers: {\n//       'Content-Type\": \"application/json',\n//       'x-auth-token': authToken,              // Authorization token\n//       'x-refresh-token': refreshToken,        // Custom refresh token header\n//     },\n//   };\n//   const { response, error, loading } = await API(axiosConfig);","map":{"version":3,"names":["axios","API","axiosConfig","shouldFetch","arguments","length","undefined","overrideConfig","res","error","loading","headers","localStorage","getItem","response","err"],"sources":["D:/PUGADMAHARLIKA/Pugad-Maharlika-Frontend/client/src/service/API.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = async (axiosConfig, shouldFetch = true, overrideConfig = {}) => {\r\n  let res = null;\r\n  let error = null;\r\n  let loading = false;\r\n\r\n  axiosConfig.headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"x-auth-token\": localStorage.getItem(\"authToken\"),\r\n    \"x-refresh-token\": localStorage.getItem(\"refreshToken\"),\r\n  };\r\n  if (shouldFetch) {\r\n    loading = true;\r\n    try {\r\n      const response = await axios({ ...axiosConfig, ...overrideConfig });\r\n      res = response;\r\n      error = null;\r\n    } catch (err) {\r\n      error = err;\r\n    } finally {\r\n      loading = false;\r\n    }\r\n  }\r\n\r\n  return { res, error, loading };\r\n};\r\n\r\nexport default API;\r\n\r\n// import API from \"../../service/API\";\r\n\r\n// async function sendresponse() {\r\n//   const axiosConfig = {\r\n//     url: \"https://api.example.com/submit\",\r\n//     method: \"POST\",\r\n//     response: {  // The response you want to post\r\n//       name: \"John Doe\",\r\n//       email: \"john.doe@example.com\",\r\n//     },\r\n//     headers: {\r\n//       'Content-Type\": \"application/json',\r\n//       'x-auth-token': authToken,              // Authorization token\r\n//       'x-refresh-token': refreshToken,        // Custom refresh token header\r\n//     },\r\n//   };\r\n\r\n//   const { response, error, loading } = await API(axiosConfig);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAG,cAAAA,CAAOC,WAAW,CAA8C,IAA5C,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAAG,cAAc,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACrE,GAAI,CAAAI,GAAG,CAAG,IAAI,CACd,GAAI,CAAAC,KAAK,CAAG,IAAI,CAChB,GAAI,CAAAC,OAAO,CAAG,KAAK,CAEnBR,WAAW,CAACS,OAAO,CAAG,CACpB,cAAc,CAAE,kBAAkB,CAClC,cAAc,CAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACjD,iBAAiB,CAAED,YAAY,CAACC,OAAO,CAAC,cAAc,CACxD,CAAC,CACD,GAAIV,WAAW,CAAE,CACfO,OAAO,CAAG,IAAI,CACd,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAAC,CAAE,GAAGE,WAAW,CAAE,GAAGK,cAAe,CAAC,CAAC,CACnEC,GAAG,CAAGM,QAAQ,CACdL,KAAK,CAAG,IAAI,CACd,CAAE,MAAOM,GAAG,CAAE,CACZN,KAAK,CAAGM,GAAG,CACb,CAAC,OAAS,CACRL,OAAO,CAAG,KAAK,CACjB,CACF,CAEA,MAAO,CAAEF,GAAG,CAAEC,KAAK,CAAEC,OAAQ,CAAC,CAChC,CAAC,CAED,cAAe,CAAAT,GAAG,CAElB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}