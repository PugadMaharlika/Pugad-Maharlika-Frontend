{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BSIT_B\\\\IV-B\\\\Capstone 2\\\\Pugad-Maharlika-Frontend\\\\client\\\\src\\\\pages\\\\admin\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport NotificationTable from \"../../components/ui/NotificationTable\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../context/Theme\";\nimport { UserContext } from \"../../context/User\";\nimport { SuccessContext } from \"../../context/Success\";\nimport { AlertsContext } from \"../../context/Alerts\";\nimport axios from \"axios\";\nimport API from \"../../service/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notification = ({\n  setSelected\n}) => {\n  _s();\n  const [theme, setTheme] = useContext(ThemeContext);\n  const [titles, setTitle] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [user, setUser] = useContext(UserContext);\n  const [success, setSuccess] = useContext(SuccessContext);\n  const [errors, setErrors] = useContext(AlertsContext);\n  const authToken = localStorage.getItem(\"authToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n  const [isloading, setIsloading] = useState(true);\n  useEffect(async () => {\n    setErrors([]);\n    setSuccess(false);\n    const config = {\n      url: `${serverUrl}/notification/view`,\n      method: \"GET\",\n      data: {}\n    };\n    const {\n      res,\n      error,\n      loading\n    } = await API(config);\n    if (res) {\n      setIsloading(false);\n    }\n    if (error) console.log(error);\n  }, []); // Dependencies to rerun effect only when these values change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end px-9 py-3\",\n      children: user.role != \"P\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn_AddNotification\",\n        onClick: () => {\n          setSelected(\"AddNotification\");\n        },\n        className: \"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\",\n        children: \"Add Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), titles && titles.map(title => /*#__PURE__*/_jsxDEV(NotificationTable, {\n      setSelected: setSelected,\n      user: user,\n      title: title,\n      message: message\n    }, title.ntf_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"CyvVhMVXBc10xSApDInXRUSen1k=\");\n_c = Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["NotificationTable","React","useState","useContext","useEffect","ThemeContext","UserContext","SuccessContext","AlertsContext","axios","API","jsxDEV","_jsxDEV","Notification","setSelected","_s","theme","setTheme","titles","setTitle","message","setMessage","user","setUser","success","setSuccess","errors","setErrors","authToken","localStorage","getItem","refreshToken","serverUrl","process","env","REACT_APP_SERVER_URL","isloading","setIsloading","config","url","method","data","res","error","loading","console","log","className","children","role","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","title","ntf_id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BSIT_B/IV-B/Capstone 2/Pugad-Maharlika-Frontend/client/src/pages/admin/Notification.jsx"],"sourcesContent":["import NotificationTable from \"../../components/ui/NotificationTable\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../context/Theme\";\r\nimport { UserContext } from \"../../context/User\";\r\nimport { SuccessContext } from \"../../context/Success\";\r\nimport { AlertsContext } from \"../../context/Alerts\";\r\nimport axios from \"axios\";\r\nimport API from \"../../service/API\";\r\n\r\nexport const Notification = ({ setSelected }) => {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n  const [titles, setTitle] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [success, setSuccess] = useContext(SuccessContext);\r\n  const [errors, setErrors] = useContext(AlertsContext);\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  const refreshToken = localStorage.getItem(\"refreshToken\");\r\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\r\n  const [isloading, setIsloading] = useState(true);\r\n\r\n  useEffect(async () => {\r\n    setErrors([]);\r\n    setSuccess(false);\r\n    const config = {\r\n      url: `${serverUrl}/notification/view`,\r\n      method: \"GET\",\r\n      data: {},\r\n    };\r\n\r\n    const { res, error, loading } = await API(config);\r\n    if (res) {\r\n      setIsloading(false);\r\n    }\r\n    if (error) console.log(error);\r\n  }, []); // Dependencies to rerun effect only when these values change\r\n\r\n  return (\r\n    <div\r\n      className={`col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `}\r\n    >\r\n      <div className=\"flex justify-end px-9 py-3\">\r\n        {user.role != \"P\" && (\r\n          <button\r\n            id=\"btn_AddNotification\"\r\n            onClick={() => {\r\n              setSelected(\"AddNotification\");\r\n            }}\r\n            className=\"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\"\r\n          >\r\n            Add Notification\r\n          </button>\r\n        )}\r\n      </div>\r\n      {titles &&\r\n        titles.map((title) => (\r\n          <NotificationTable\r\n            key={title.ntf_id}\r\n            setSelected={setSelected}\r\n            user={user}\r\n            title={title}\r\n            message={message}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}