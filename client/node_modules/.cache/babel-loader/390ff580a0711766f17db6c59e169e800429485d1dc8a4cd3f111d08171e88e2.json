{"ast":null,"code":"import{useEffect,useRef,useCallback}from\"react\";// Default timeout of 30 minutes 30 * 60000\nfunction useInactivityTimeout(callback){let timeout=arguments.length>1&&arguments[1]!==undefined?arguments[1]:30*60000;const timeoutRef=useRef(null);const resetTimer=useCallback(()=>{// Clear the existing timeout\nif(timeoutRef.current){clearTimeout(timeoutRef.current);}// Set a new timeout\ntimeoutRef.current=setTimeout(()=>{callback();},timeout);},[callback,timeout]);useEffect(()=>{// Define the events to listen for to detect user activity\nconst events=[\"mousemove\",\"click\",\"keypress\",\"scroll\",\"mousemove\",\"keydown\",\"mousedown\",\"touchstart\",\"touchend\",\"touchmove\",\"touchcancel\"];// Reset the timer on any of these events\nevents.forEach(event=>window.addEventListener(event,resetTimer));// Initial timer start\nresetTimer();// Cleanup function to remove event listeners and clear timeout\nreturn()=>{events.forEach(event=>window.removeEventListener(event,resetTimer));if(timeoutRef.current){clearTimeout(timeoutRef.current);}};},[resetTimer]);return{resetTimer};}export default useInactivityTimeout;","map":{"version":3,"names":["useEffect","useRef","useCallback","useInactivityTimeout","callback","timeout","arguments","length","undefined","timeoutRef","resetTimer","current","clearTimeout","setTimeout","events","forEach","event","window","addEventListener","removeEventListener"],"sources":["D:/PUGADMAHARLIKA/Pugad-Maharlika-Frontend/client/src/hooks/useInactivityTimeout .js"],"sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\r\n\r\n// Default timeout of 30 minutes 30 * 60000\r\nfunction useInactivityTimeout(callback, timeout = 30 * 60000) {\r\n  const timeoutRef = useRef(null);\r\n\r\n  const resetTimer = useCallback(() => {\r\n    // Clear the existing timeout\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n    // Set a new timeout\r\n    timeoutRef.current = setTimeout(() => {\r\n      callback();\r\n    }, timeout);\r\n  }, [callback, timeout]);\r\n\r\n  useEffect(() => {\r\n    // Define the events to listen for to detect user activity\r\n    const events = [\r\n      \"mousemove\",\r\n      \"click\",\r\n      \"keypress\",\r\n      \"scroll\",\r\n      \"mousemove\",\r\n      \"keydown\",\r\n      \"mousedown\",\r\n      \"touchstart\",\r\n      \"touchend\",\r\n      \"touchmove\",\r\n      \"touchcancel\",\r\n    ];\r\n\r\n    // Reset the timer on any of these events\r\n    events.forEach((event) => window.addEventListener(event, resetTimer));\r\n\r\n    // Initial timer start\r\n    resetTimer();\r\n\r\n    // Cleanup function to remove event listeners and clear timeout\r\n    return () => {\r\n      events.forEach((event) => window.removeEventListener(event, resetTimer));\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, [resetTimer]);\r\n\r\n  return { resetTimer };\r\n}\r\n\r\nexport default useInactivityTimeout;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CAEtD;AACA,QAAS,CAAAC,oBAAoBA,CAACC,QAAQ,CAAwB,IAAtB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAAG,KAAK,CAC1D,KAAM,CAAAG,UAAU,CAAGR,MAAM,CAAC,IAAI,CAAC,CAE/B,KAAM,CAAAS,UAAU,CAAGR,WAAW,CAAC,IAAM,CACnC;AACA,GAAIO,UAAU,CAACE,OAAO,CAAE,CACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC,CAClC,CACA;AACAF,UAAU,CAACE,OAAO,CAAGE,UAAU,CAAC,IAAM,CACpCT,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAEC,OAAO,CAAC,CACb,CAAC,CAAE,CAACD,QAAQ,CAAEC,OAAO,CAAC,CAAC,CAEvBL,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAc,MAAM,CAAG,CACb,WAAW,CACX,OAAO,CACP,UAAU,CACV,QAAQ,CACR,WAAW,CACX,SAAS,CACT,WAAW,CACX,YAAY,CACZ,UAAU,CACV,WAAW,CACX,aAAa,CACd,CAED;AACAA,MAAM,CAACC,OAAO,CAAEC,KAAK,EAAKC,MAAM,CAACC,gBAAgB,CAACF,KAAK,CAAEN,UAAU,CAAC,CAAC,CAErE;AACAA,UAAU,CAAC,CAAC,CAEZ;AACA,MAAO,IAAM,CACXI,MAAM,CAACC,OAAO,CAAEC,KAAK,EAAKC,MAAM,CAACE,mBAAmB,CAACH,KAAK,CAAEN,UAAU,CAAC,CAAC,CACxE,GAAID,UAAU,CAACE,OAAO,CAAE,CACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC,CAClC,CACF,CAAC,CACH,CAAC,CAAE,CAACD,UAAU,CAAC,CAAC,CAEhB,MAAO,CAAEA,UAAW,CAAC,CACvB,CAEA,cAAe,CAAAP,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}