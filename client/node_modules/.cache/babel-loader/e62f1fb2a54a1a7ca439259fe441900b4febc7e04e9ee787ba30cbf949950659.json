{"ast":null,"code":"import{useEffect,useContext}from\"react\";import{UserContext}from\"../context/User\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";const serverUrl=process.env.REACT_APP_SERVER_URL;function useAuthCheck(){const navigate=useNavigate();const[user,setUser]=useContext(UserContext);useEffect(()=>{const authToken=localStorage.getItem(\"authToken\");const refreshToken=localStorage.getItem(\"refreshToken\");if(!authToken||!refreshToken){navigate(\"/\");return;// Exit early if no tokens\n}axios.post(`${serverUrl}/auth/verify`,{},{headers:{\"x-auth-token\":authToken,\"x-refresh-token\":refreshToken}}).then(response=>{setUser(response.data.account);localStorage.setItem(\"authToken\",response.data.token);}).catch(error=>{navigate(\"/\");console.error(error.response?error.response.data:error.message);});},[navigate]);// Add navigate to dependencies\n}export default useAuthCheck;","map":{"version":3,"names":["useEffect","useContext","UserContext","useNavigate","axios","serverUrl","process","env","REACT_APP_SERVER_URL","useAuthCheck","navigate","user","setUser","authToken","localStorage","getItem","refreshToken","post","headers","then","response","data","account","setItem","token","catch","error","console","message"],"sources":["D:/PUGADMAHARLIKA/Pugad-Maharlika-Frontend/client/src/hooks/useAuthCheck.js"],"sourcesContent":["import { useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../context/User\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nfunction useAuthCheck() {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem(\"authToken\");\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n    if (!authToken || !refreshToken) {\r\n      navigate(\"/\");\r\n      return; // Exit early if no tokens\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        `${serverUrl}/auth/verify`,\r\n        {},\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": authToken,\r\n            \"x-refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setUser(response.data.account);\r\n        localStorage.setItem(\"authToken\", response.data.token);\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/\");\r\n        console.error(error.response ? error.response.data : error.message);\r\n      });\r\n  }, [navigate]); // Add navigate to dependencies\r\n}\r\n\r\nexport default useAuthCheck;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7C,OAASC,WAAW,KAAQ,iBAAiB,CAC7C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,SAAS,CAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAElD,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAGX,UAAU,CAACC,WAAW,CAAC,CAE/CF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACnD,KAAM,CAAAC,YAAY,CAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACzD,GAAI,CAACF,SAAS,EAAI,CAACG,YAAY,CAAE,CAC/BN,QAAQ,CAAC,GAAG,CAAC,CACb,OAAQ;AACV,CAEAN,KAAK,CACFa,IAAI,CACH,GAAGZ,SAAS,cAAc,CAC1B,CAAC,CAAC,CACF,CACEa,OAAO,CAAE,CACP,cAAc,CAAEL,SAAS,CACzB,iBAAiB,CAAEG,YACrB,CACF,CACF,CAAC,CACAG,IAAI,CAAEC,QAAQ,EAAK,CAClBR,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAC9BR,YAAY,CAACS,OAAO,CAAC,WAAW,CAAEH,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CACxD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBhB,QAAQ,CAAC,GAAG,CAAC,CACbiB,OAAO,CAACD,KAAK,CAACA,KAAK,CAACN,QAAQ,CAAGM,KAAK,CAACN,QAAQ,CAACC,IAAI,CAAGK,KAAK,CAACE,OAAO,CAAC,CACrE,CAAC,CAAC,CACN,CAAC,CAAE,CAAClB,QAAQ,CAAC,CAAC,CAAE;AAClB,CAEA,cAAe,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}