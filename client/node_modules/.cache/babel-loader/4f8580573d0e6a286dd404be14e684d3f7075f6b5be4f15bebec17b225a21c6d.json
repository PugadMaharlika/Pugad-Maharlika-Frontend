{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Pugad Testing\\\\Pugad-Maharlika-Frontend\\\\client\\\\src\\\\components\\\\ui\\\\DataTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AdminAccount } from './AdminAccount'; // Adjust the import based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accvalues = [{\n  id: 1,\n  username: \"OhMama\",\n  email: \"johny@gmail.com\",\n  date: \"28 Jan, 12:30 AM\",\n  status: \"Active\",\n  image: null\n}, {\n  id: 2,\n  username: \"OhMuscle\",\n  email: \"masku@gmail.com\",\n  date: \"25 Jan, 10:40 PM\",\n  status: \"Active\",\n  image: null\n}, {\n  id: 3,\n  username: \"Alahooooo!\",\n  email: \"abdul@gmail.com\",\n  date: \"20 Jan, 10:40 PM\",\n  status: \"Disabled\",\n  image: null\n}, {\n  id: 4,\n  username: \"Lalalala\",\n  email: \"wsmith@gmail.com\",\n  date: \"15 Jan, 03:29 PM\",\n  status: \"Disabled\",\n  image: null\n}, {\n  id: 5,\n  username: \"Yeaaaahh!\",\n  email: \"ESing@gmail.com\",\n  date: \"14 Jan, 10:40 PM\",\n  status: \"Active\",\n  image: null\n}];\nconst DataTable = () => {\n  _s();\n  const [selectedRow, setSelectedRow] = useState(null);\n  const handleRowClick = row => {\n    setSelectedRow(row); // Set the clicked row as selectedRow\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Admin Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: accvalues.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleRowClick(row),\n        className: \"p-4 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-100\",\n        children: [row.username, \" \"]\n      }, row.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), selectedRow && /*#__PURE__*/_jsxDEV(AdminAccount, {\n      setSelected: setSelectedRow,\n      selectedRow: selectedRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"uNqdeC4/AX7zbEPErixrXmI9Bw8=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","AdminAccount","jsxDEV","_jsxDEV","accvalues","id","username","email","date","status","image","DataTable","_s","selectedRow","setSelectedRow","handleRowClick","row","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","setSelected","_c","$RefreshReg$"],"sources":["C:/Github/Pugad Testing/Pugad-Maharlika-Frontend/client/src/components/ui/DataTable.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { AdminAccount } from './AdminAccount'; // Adjust the import based on your file structure\r\n\r\nconst accvalues = [\r\n  { id: 1, username: \"OhMama\", email: \"johny@gmail.com\", date: \"28 Jan, 12:30 AM\", status: \"Active\", image: null },\r\n  { id: 2, username: \"OhMuscle\", email: \"masku@gmail.com\", date: \"25 Jan, 10:40 PM\", status: \"Active\", image: null },\r\n  { id: 3, username: \"Alahooooo!\", email: \"abdul@gmail.com\", date: \"20 Jan, 10:40 PM\", status: \"Disabled\", image: null },\r\n  { id: 4, username: \"Lalalala\", email: \"wsmith@gmail.com\", date: \"15 Jan, 03:29 PM\", status: \"Disabled\", image: null },\r\n  { id: 5, username: \"Yeaaaahh!\", email: \"ESing@gmail.com\", date: \"14 Jan, 10:40 PM\", status: \"Active\", image: null },\r\n];\r\n\r\nconst DataTable = () => {\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n  const handleRowClick = (row) => {\r\n    setSelectedRow(row); // Set the clicked row as selectedRow\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Admin Accounts</h1>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {accvalues.map((row) => (\r\n          <div\r\n            key={row.id}\r\n            onClick={() => handleRowClick(row)}\r\n            className=\"p-4 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-100\"\r\n          >\r\n            {row.username} {/* Display username as an example */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {/* Render AdminAccount only if a row is selected */}\r\n      {selectedRow && <AdminAccount setSelected={setSelectedRow} selectedRow={selectedRow} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,QAAQ;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,MAAM,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAK,CAAC,EAChH;EAAEL,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,UAAU;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,MAAM,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAK,CAAC,EAClH;EAAEL,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,YAAY;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,MAAM,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAK,CAAC,EACtH;EAAEL,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,UAAU;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,MAAM,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAK,CAAC,EACrH;EAAEL,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,WAAW;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,MAAM,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAK,CAAC,CACpH;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMe,cAAc,GAAIC,GAAG,IAAK;IAC9BF,cAAc,CAACE,GAAG,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAIe,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DnB,OAAA;MAAKe,SAAS,EAAC,uCAAuC;MAAAD,QAAA,EACnDb,SAAS,CAACmB,GAAG,CAAEP,GAAG,iBACjBb,OAAA;QAEEqB,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAACC,GAAG,CAAE;QACnCE,SAAS,EAAC,wEAAwE;QAAAD,QAAA,GAEjFD,GAAG,CAACV,QAAQ,EAAC,GAAC;MAAA,GAJVU,GAAG,CAACX,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLT,WAAW,iBAAIV,OAAA,CAACF,YAAY;MAACwB,WAAW,EAAEX,cAAe;MAACD,WAAW,EAAEA;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV,CAAC;AAACV,EAAA,CA1BID,SAAS;AAAAe,EAAA,GAATf,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}