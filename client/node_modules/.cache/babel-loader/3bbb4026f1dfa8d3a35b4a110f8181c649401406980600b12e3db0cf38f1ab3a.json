{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useContext } from \"react\";\nimport { SuccessContext } from \"../context/Success\";\nimport { AlertsContext } from \"../context/Alerts\";\nconst UploadImage = (file, setImage) => {\n  _s();\n  const [success, setSuccess] = useContext(SuccessContext);\n  const [errors, setErrors] = useContext(AlertsContext);\n  setErrors([]);\n  setSuccess(false);\n  if (file == \"\") {\n    setSuccess(false);\n    setErrors([\"No file selected. Please select an image file\"]);\n    return false;\n  }\n\n  // Check file type (case-insensitive)\n  const allowedTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n  if (!allowedTypes.includes(file.type.toLowerCase())) {\n    setSuccess(false);\n    setErrors([\"Invalid file type. Only PNG, JPG, and JPEG are allowed\"]);\n    return false;\n  }\n\n  // Check file size (less than or equal to 5 MB)\n  const maxSize = 5 * 1024 * 1024; // 5 MB in bytes\n  if (file.size > maxSize) {\n    setSuccess(false);\n    setErrors([\"File size exceeds 5 MB. Please choose a smaller file.\"]);\n    return false;\n  }\n  file = file[0];\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", \"mz6oejap\");\n  axios.post(\"https://api.cloudinary.com/v1_1/dcxrygdx8/image/upload\", formData).then(response => {\n    console.log(response);\n  });\n};\n_s(UploadImage, \"Fi8F35En3ctAMW0eUNbuZUkVFnU=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["axios","useState","useContext","SuccessContext","AlertsContext","UploadImage","file","setImage","_s","success","setSuccess","errors","setErrors","allowedTypes","includes","type","toLowerCase","maxSize","size","formData","FormData","append","post","then","response","console","log","_c","$RefreshReg$"],"sources":["C:/Users/torre/Documents/GitHub/Pugad Maharlika Web App/Pugad-Maharlika-Frontend/client/src/service/UploadImage.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useContext } from \"react\";\r\nimport { SuccessContext } from \"../context/Success\";\r\nimport { AlertsContext } from \"../context/Alerts\";\r\n\r\nconst UploadImage = (file, setImage) => {\r\n  const [success, setSuccess] = useContext(SuccessContext);\r\n  const [errors, setErrors] = useContext(AlertsContext);\r\n  setErrors([]);\r\n  setSuccess(false);\r\n\r\n  if (file == \"\") {\r\n    setSuccess(false);\r\n    setErrors([\"No file selected. Please select an image file\"]);\r\n    return false;\r\n  }\r\n\r\n  // Check file type (case-insensitive)\r\n  const allowedTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n  if (!allowedTypes.includes(file.type.toLowerCase())) {\r\n    setSuccess(false);\r\n    setErrors([\"Invalid file type. Only PNG, JPG, and JPEG are allowed\"]);\r\n    return false;\r\n  }\r\n\r\n  // Check file size (less than or equal to 5 MB)\r\n  const maxSize = 5 * 1024 * 1024; // 5 MB in bytes\r\n  if (file.size > maxSize) {\r\n    setSuccess(false);\r\n    setErrors([\"File size exceeds 5 MB. Please choose a smaller file.\"]);\r\n    return false;\r\n  }\r\n\r\n  file = file[0];\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"upload_preset\", \"mz6oejap\");\r\n\r\n  axios\r\n    .post(\"https://api.cloudinary.com/v1_1/dcxrygdx8/image/upload\", formData)\r\n    .then((response) => {\r\n      console.log(response);\r\n    });\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,UAAU,CAACC,cAAc,CAAC;EACxD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,UAAU,CAACE,aAAa,CAAC;EACrDQ,SAAS,CAAC,EAAE,CAAC;EACbF,UAAU,CAAC,KAAK,CAAC;EAEjB,IAAIJ,IAAI,IAAI,EAAE,EAAE;IACdI,UAAU,CAAC,KAAK,CAAC;IACjBE,SAAS,CAAC,CAAC,+CAA+C,CAAC,CAAC;IAC5D,OAAO,KAAK;EACd;;EAEA;EACA,MAAMC,YAAY,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC;EAC7D,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACR,IAAI,CAACS,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,EAAE;IACnDN,UAAU,CAAC,KAAK,CAAC;IACjBE,SAAS,CAAC,CAAC,wDAAwD,CAAC,CAAC;IACrE,OAAO,KAAK;EACd;;EAEA;EACA,MAAMK,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;EACjC,IAAIX,IAAI,CAACY,IAAI,GAAGD,OAAO,EAAE;IACvBP,UAAU,CAAC,KAAK,CAAC;IACjBE,SAAS,CAAC,CAAC,uDAAuD,CAAC,CAAC;IACpE,OAAO,KAAK;EACd;EAEAN,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;EAEd,MAAMa,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,IAAI,CAAC;EAC7Ba,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC;EAE5CrB,KAAK,CACFsB,IAAI,CAAC,wDAAwD,EAAEH,QAAQ,CAAC,CACxEI,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB,CAAC,CAAC;AACN,CAAC;AAAChB,EAAA,CAvCIH,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}