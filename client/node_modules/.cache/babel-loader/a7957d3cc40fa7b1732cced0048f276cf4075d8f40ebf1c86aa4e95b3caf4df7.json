{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BSIT_B\\\\IV-B\\\\Capstone 2\\\\Pugad-Maharlika-Frontend\\\\client\\\\src\\\\pages\\\\admin\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport NotificationTable from \"../../components/ui/NotificationTable\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../context/Theme\";\nimport { UserContext } from \"../../context/User\";\nimport { SuccessContext } from \"../../context/Success\";\nimport { AlertsContext } from \"../../context/Alerts\";\nimport axios from \"axios\";\nimport API from \"../../service/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notification = ({\n  setSelected,\n  user,\n  setNotificationselected\n}) => {\n  _s();\n  const [theme, setTheme] = useContext(ThemeContext);\n  const [notifications, setNotification] = useState(null);\n  const [success, setSuccess] = useContext(SuccessContext);\n  const [errors, setErrors] = useContext(AlertsContext);\n  const authToken = localStorage.getItem(\"authToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n  const [isloading, setIsloading] = useState(true);\n  useEffect(() => {\n    const handleViewNotification = async () => {\n      setErrors([]);\n      setSuccess(false);\n      const config = {\n        url: `${serverUrl}/notification/view`,\n        method: \"GET\",\n        data: {}\n      };\n      const {\n        res,\n        error,\n        loading\n      } = await API(config);\n      if (res) {\n        setIsloading(false);\n        setUser(res.data.account);\n        setNotification(res.data.notifications);\n        console.log(res.data);\n      }\n      if (error) console.log(error);\n    };\n    handleViewNotification();\n  }, []); // Dependencies to rerun effect only when these values change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end px-9 py-3\",\n      children: user.role != \"P\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn_AddNotification\",\n        onClick: () => {\n          setSelected(\"AddNotification\");\n        },\n        className: \"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\",\n        children: \"Add Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationTable, {\n      setSelected: setSelected,\n      notifications: notifications,\n      setNotificationselected: setNotificationselected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"tY5GS0UhHPfjmsBoOu4ZURfJLB4=\");\n_c = Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["NotificationTable","React","useState","useContext","useEffect","ThemeContext","UserContext","SuccessContext","AlertsContext","axios","API","jsxDEV","_jsxDEV","Notification","setSelected","user","setNotificationselected","_s","theme","setTheme","notifications","setNotification","success","setSuccess","errors","setErrors","authToken","localStorage","getItem","refreshToken","serverUrl","process","env","REACT_APP_SERVER_URL","isloading","setIsloading","handleViewNotification","config","url","method","data","res","error","loading","setUser","account","console","log","className","children","role","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BSIT_B/IV-B/Capstone 2/Pugad-Maharlika-Frontend/client/src/pages/admin/Notification.jsx"],"sourcesContent":["import NotificationTable from \"../../components/ui/NotificationTable\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../context/Theme\";\r\nimport { UserContext } from \"../../context/User\";\r\nimport { SuccessContext } from \"../../context/Success\";\r\nimport { AlertsContext } from \"../../context/Alerts\";\r\nimport axios from \"axios\";\r\nimport API from \"../../service/API\";\r\n\r\nexport const Notification = ({\r\n  setSelected,\r\n  user,\r\n  setNotificationselected,\r\n}) => {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n  const [notifications, setNotification] = useState(null);\r\n  const [success, setSuccess] = useContext(SuccessContext);\r\n  const [errors, setErrors] = useContext(AlertsContext);\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  const refreshToken = localStorage.getItem(\"refreshToken\");\r\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\r\n  const [isloading, setIsloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const handleViewNotification = async () => {\r\n      setErrors([]);\r\n      setSuccess(false);\r\n      const config = {\r\n        url: `${serverUrl}/notification/view`,\r\n        method: \"GET\",\r\n        data: {},\r\n      };\r\n\r\n      const { res, error, loading } = await API(config);\r\n      if (res) {\r\n        setIsloading(false);\r\n        setUser(res.data.account);\r\n        setNotification(res.data.notifications);\r\n\r\n        console.log(res.data);\r\n      }\r\n      if (error) console.log(error);\r\n    };\r\n    handleViewNotification();\r\n  }, []); // Dependencies to rerun effect only when these values change\r\n\r\n  return (\r\n    <div\r\n      className={`col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `}\r\n    >\r\n      <div className=\"flex justify-end px-9 py-3\">\r\n        {user.role != \"P\" && (\r\n          <button\r\n            id=\"btn_AddNotification\"\r\n            onClick={() => {\r\n              setSelected(\"AddNotification\");\r\n            }}\r\n            className=\"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\"\r\n          >\r\n            Add Notification\r\n          </button>\r\n        )}\r\n      </div>\r\n      <NotificationTable\r\n        setSelected={setSelected}\r\n        notifications={notifications}\r\n        setNotificationselected={setNotificationselected}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}