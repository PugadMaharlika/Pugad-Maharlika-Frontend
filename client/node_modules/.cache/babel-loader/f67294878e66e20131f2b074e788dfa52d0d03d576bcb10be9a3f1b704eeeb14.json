{"ast":null,"code":"import axios from \"axios\";\nconst UploadImage = (file, setSuccess, setErrors, setCallback) => {\n  if (file == \"\") {\n    setSuccess(false);\n    setErrors([\"No file selected. Please select an image file\"]);\n    return false;\n  }\n\n  // Check file type (case-insensitive)\n  const allowedTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n  if (!allowedTypes.includes(file.type.toLowerCase())) {\n    setSuccess(false);\n    setErrors([\"Invalid file type. Only PNG, JPG, and JPEG are allowed\"]);\n    return false;\n  }\n\n  // Check file size (less than or equal to 5 MB)\n  const maxSize = 5 * 1024 * 1024; // 5 MB in bytes\n  if (file.size > maxSize) {\n    setSuccess(false);\n    setErrors([\"File size exceeds 5 MB. Please choose a smaller file.\"]);\n    return false;\n  }\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", \"bly6md1o\");\n  axios.post(\"https://api.cloudinary.com/v1_1/dchcpwbya/upload\", formData).then(response => {\n    setSuccess(true);\n    setErrors([\"Image uploaded successfully.\"]);\n    setCallback(response.data.url);\n  });\n};\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["axios","UploadImage","file","setSuccess","setErrors","setCallback","allowedTypes","includes","type","toLowerCase","maxSize","size","formData","FormData","append","post","then","response","data","url","_c","$RefreshReg$"],"sources":["D:/PUGADMAHARLIKA/Pugad-Maharlika-Frontend/client/src/service/UploadImage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst UploadImage = (file, setSuccess, setErrors, setCallback) => {\r\n  if (file == \"\") {\r\n    setSuccess(false);\r\n    setErrors([\"No file selected. Please select an image file\"]);\r\n    return false;\r\n  }\r\n\r\n  // Check file type (case-insensitive)\r\n  const allowedTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n  if (!allowedTypes.includes(file.type.toLowerCase())) {\r\n    setSuccess(false);\r\n    setErrors([\"Invalid file type. Only PNG, JPG, and JPEG are allowed\"]);\r\n    return false;\r\n  }\r\n\r\n  // Check file size (less than or equal to 5 MB)\r\n  const maxSize = 5 * 1024 * 1024; // 5 MB in bytes\r\n  if (file.size > maxSize) {\r\n    setSuccess(false);\r\n    setErrors([\"File size exceeds 5 MB. Please choose a smaller file.\"]);\r\n    return false;\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"upload_preset\", \"bly6md1o\");\r\n\r\n  axios.post(\"https://api.cloudinary.com/v1_1/dchcpwbya/upload\", formData).then((response) => {\r\n    setSuccess(true);\r\n    setErrors([\"Image uploaded successfully.\"]);\r\n    setCallback(response.data.url);\r\n  });\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,KAAK;EAChE,IAAIH,IAAI,IAAI,EAAE,EAAE;IACdC,UAAU,CAAC,KAAK,CAAC;IACjBC,SAAS,CAAC,CAAC,+CAA+C,CAAC,CAAC;IAC5D,OAAO,KAAK;EACd;;EAEA;EACA,MAAME,YAAY,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC;EAC7D,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACL,IAAI,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,EAAE;IACnDN,UAAU,CAAC,KAAK,CAAC;IACjBC,SAAS,CAAC,CAAC,wDAAwD,CAAC,CAAC;IACrE,OAAO,KAAK;EACd;;EAEA;EACA,MAAMM,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;EACjC,IAAIR,IAAI,CAACS,IAAI,GAAGD,OAAO,EAAE;IACvBP,UAAU,CAAC,KAAK,CAAC;IACjBC,SAAS,CAAC,CAAC,uDAAuD,CAAC,CAAC;IACpE,OAAO,KAAK;EACd;EAEA,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;EAC7BU,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC;EAE5Cd,KAAK,CAACe,IAAI,CAAC,kDAAkD,EAAEH,QAAQ,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;IAC1Fd,UAAU,CAAC,IAAI,CAAC;IAChBC,SAAS,CAAC,CAAC,8BAA8B,CAAC,CAAC;IAC3CC,WAAW,CAACY,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AAACC,EAAA,GAhCInB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}