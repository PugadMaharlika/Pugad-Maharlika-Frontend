{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BSIT_B\\\\IV-B\\\\Capstone 2\\\\Pugad-Maharlika-Frontend\\\\client\\\\src\\\\pages\\\\admin\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport NotificationTable from \"../../components/ui/NotificationTable\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../context/Theme\";\nimport { UserContext } from \"../../context/User\";\nimport { SuccessContext } from \"../../context/Success\";\nimport { AlertsContext } from \"../../context/Alerts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*Get Props import axios from \"axios\";*/\n}\nexport const Notification = ({\n  setSelected\n}) => {\n  _s();\n  const [theme, setTheme] = useContext(ThemeContext);\n  const [titles, setTitle] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [user, setUser] = useContext(UserContext);\n  const [success, setSuccess] = useContext(SuccessContext);\n  const [errors, setErrors] = useContext(AlertsContext);\n  const authToken = localStorage.getItem(\"authToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n  // useEffect(() => {\n  //   const fetchNotification = async () => {\n  //     try {\n  //       setErrors([]);\n  //       setSuccess(false);\n\n  //       const response = await axios.get(\n  //         `${serverUrl}/notification/view`,\n\n  //         {\n  //           headers: {\n  //             \"x-auth-token\": authToken,\n  //             \"x-refresh-token\": refreshToken,\n  //           },\n  //         },\n  //         {}\n  //       );\n  //       setTitle(response.data.title);\n  //       setUser(response.data.account);\n  //       setSuccess(true); // Set success only if the request succeeds\n  //     } catch (error) {\n  //       console.error(error);\n  //       setSuccess(false);\n  //       if (error.response && error.response.data.errors) {\n  //         setErrors(error.response.data.errors.map((err) => err.msg));\n  //       } else {\n  //         setErrors([\"An unexpected error occurred.\"]); // Generic fallback\n  //       }\n  //     }\n  //   };\n\n  //   fetchNotification();\n\n  //   // Optionally return a cleanup function\n  //   return () => {\n  //     setTitle([]); // Example cleanup, adjust as needed\n  //   };\n  // }, []); // Dependencies to rerun effect only when these values change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end px-9 py-3\",\n      children: user.role != \"P\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn_AddNotification\",\n        onClick: () => {\n          setSelected(\"AddNotification\");\n        },\n        className: \"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\",\n        children: \"Add Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), titles && titles.map(title => /*#__PURE__*/_jsxDEV(NotificationTable, {\n      setSelected: setSelected,\n      user: user,\n      title: title,\n      message: message,\n      type: type\n    }, title.ntf_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"YMsvYussLFor5MIBvc+/dYWUgs0=\");\n_c = Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["NotificationTable","React","useState","useContext","useEffect","ThemeContext","UserContext","SuccessContext","AlertsContext","axios","jsxDEV","_jsxDEV","Notification","setSelected","_s","theme","setTheme","titles","setTitle","message","setMessage","user","setUser","success","setSuccess","errors","setErrors","authToken","localStorage","getItem","refreshToken","serverUrl","process","env","REACT_APP_SERVER_URL","className","children","role","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","title","type","ntf_id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BSIT_B/IV-B/Capstone 2/Pugad-Maharlika-Frontend/client/src/pages/admin/Notification.jsx"],"sourcesContent":["import NotificationTable from \"../../components/ui/NotificationTable\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../context/Theme\";\r\nimport { UserContext } from \"../../context/User\";\r\nimport { SuccessContext } from \"../../context/Success\";\r\nimport { AlertsContext } from \"../../context/Alerts\";\r\nimport axios from \"axios\";\r\n\r\n{\r\n  /*Get Props import axios from \"axios\";*/\r\n}\r\nexport const Notification = ({ setSelected }) => {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n  const [titles, setTitle] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [success, setSuccess] = useContext(SuccessContext);\r\n  const [errors, setErrors] = useContext(AlertsContext);\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  const refreshToken = localStorage.getItem(\"refreshToken\");\r\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\n  // useEffect(() => {\r\n  //   const fetchNotification = async () => {\r\n  //     try {\r\n  //       setErrors([]);\r\n  //       setSuccess(false);\r\n\r\n  //       const response = await axios.get(\r\n  //         `${serverUrl}/notification/view`,\r\n\r\n  //         {\r\n  //           headers: {\r\n  //             \"x-auth-token\": authToken,\r\n  //             \"x-refresh-token\": refreshToken,\r\n  //           },\r\n  //         },\r\n  //         {}\r\n  //       );\r\n  //       setTitle(response.data.title);\r\n  //       setUser(response.data.account);\r\n  //       setSuccess(true); // Set success only if the request succeeds\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //       setSuccess(false);\r\n  //       if (error.response && error.response.data.errors) {\r\n  //         setErrors(error.response.data.errors.map((err) => err.msg));\r\n  //       } else {\r\n  //         setErrors([\"An unexpected error occurred.\"]); // Generic fallback\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchNotification();\r\n\r\n  //   // Optionally return a cleanup function\r\n  //   return () => {\r\n  //     setTitle([]); // Example cleanup, adjust as needed\r\n  //   };\r\n  // }, []); // Dependencies to rerun effect only when these values change\r\n\r\n  return (\r\n    <div\r\n      className={`col-span-8 overflow-hidden rounded-lg text-xs md:text-md w-64 px-8 sm:w-full `}\r\n    >\r\n      <div className=\"flex justify-end px-9 py-3\">\r\n        {user.role != \"P\" && (\r\n          <button\r\n            id=\"btn_AddNotification\"\r\n            onClick={() => {\r\n              setSelected(\"AddNotification\");\r\n            }}\r\n            className=\"rounded-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6\"\r\n          >\r\n            Add Notification\r\n          </button>\r\n        )}\r\n      </div>\r\n      {titles &&\r\n        titles.map((title) => (\r\n          <NotificationTable\r\n            key={title.ntf_id}\r\n            setSelected={setSelected}\r\n            user={user}\r\n            title={title}\r\n            message={message}\r\n            type={type}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,iBAAiB,MAAM,uCAAuC;AACrE,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B;EACE;AAAA;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACE,YAAY,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,UAAU,CAACI,cAAc,CAAC;EACxD,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,UAAU,CAACK,aAAa,CAAC;EACrD,MAAMmB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACzD,MAAME,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;;EAElD;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEvB,OAAA;IACEwB,SAAS,EAAE,+EAAgF;IAAAC,QAAA,gBAE3FzB,OAAA;MAAKwB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EACxCf,IAAI,CAACgB,IAAI,IAAI,GAAG,iBACf1B,OAAA;QACE2B,EAAE,EAAC,qBAAqB;QACxBC,OAAO,EAAEA,CAAA,KAAM;UACb1B,WAAW,CAAC,iBAAiB,CAAC;QAChC,CAAE;QACFsB,SAAS,EAAC,6EAA6E;QAAAC,QAAA,EACxF;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACL1B,MAAM,IACLA,MAAM,CAAC2B,GAAG,CAAEC,KAAK,iBACflC,OAAA,CAACX,iBAAiB;MAEhBa,WAAW,EAAEA,WAAY;MACzBQ,IAAI,EAAEA,IAAK;MACXwB,KAAK,EAAEA,KAAM;MACb1B,OAAO,EAAEA,OAAQ;MACjB2B,IAAI,EAAEA;IAAK,GALND,KAAK,CAACE,MAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMlB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhFWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}