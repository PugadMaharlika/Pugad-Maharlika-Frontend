{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from \"react\";\nimport { UserContext } from \"../context/User\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\nfunction useAuthCheck() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useContext(UserContext);\n  useEffect(() => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    if (!authToken || !refreshToken) {\n      navigate(\"/\");\n      return; // Exit early if no tokens\n    }\n    axios.post(`${serverUrl}/auth/verify`, {}, {\n      headers: {\n        \"x-auth-token\": authToken,\n        \"x-refresh-token\": refreshToken\n      }\n    }).then(response => {\n      setUser(response.data.account);\n      localStorage.setItem(\"authToken\", response.data.token);\n    }).catch(error => {\n      navigate(\"/\");\n      console.error(error.response ? error.response.data : error.message);\n    });\n  }, [navigate]); // Add navigate to dependencies\n}\n_s(useAuthCheck, \"miXYk71yhnO0ov3GQRzjbMq7pzM=\", false, function () {\n  return [useNavigate];\n});\nexport default useAuthCheck;","map":{"version":3,"names":["useEffect","useContext","UserContext","useNavigate","axios","serverUrl","process","env","REACT_APP_SERVER_URL","useAuthCheck","_s","navigate","user","setUser","authToken","localStorage","getItem","refreshToken","post","headers","then","response","data","account","setItem","token","catch","error","console","message"],"sources":["C:/Users/RORI/Documents/GitHub/Pugad-Maharlika-Frontend/client/src/hooks/useAuthCheck.js"],"sourcesContent":["import { useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../context/User\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\r\n\r\nfunction useAuthCheck() {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem(\"authToken\");\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n    if (!authToken || !refreshToken) {\r\n      navigate(\"/\");\r\n      return; // Exit early if no tokens\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        `${serverUrl}/auth/verify`,\r\n        {},\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": authToken,\r\n            \"x-refresh-token\": refreshToken,\r\n          },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        setUser(response.data.account);\r\n        localStorage.setItem(\"authToken\", response.data.token);\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/\");\r\n        console.error(error.response ? error.response.data : error.message);\r\n      });\r\n  }, [navigate]); // Add navigate to dependencies\r\n}\r\n\r\nexport default useAuthCheck;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAElD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGZ,UAAU,CAACC,WAAW,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,IAAI,CAACF,SAAS,IAAI,CAACG,YAAY,EAAE;MAC/BN,QAAQ,CAAC,GAAG,CAAC;MACb,OAAO,CAAC;IACV;IAEAP,KAAK,CACFc,IAAI,CACH,GAAGb,SAAS,cAAc,EAC1B,CAAC,CAAC,EACF;MACEc,OAAO,EAAE;QACP,cAAc,EAAEL,SAAS;QACzB,iBAAiB,EAAEG;MACrB;IACF,CACF,CAAC,CACAG,IAAI,CAAEC,QAAQ,IAAK;MAClBR,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;MAC9BR,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC;IACxD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBhB,QAAQ,CAAC,GAAG,CAAC;MACbiB,OAAO,CAACD,KAAK,CAACA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACC,IAAI,GAAGK,KAAK,CAACE,OAAO,CAAC;IACrE,CAAC,CAAC;EACN,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC,CAAC,CAAC;AAClB;AAACD,EAAA,CAhCQD,YAAY;EAAA,QACFN,WAAW;AAAA;AAiC9B,eAAeM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}