{"ast":null,"code":"import axios from \"axios\";\nconst API = async (axiosConfig, shouldFetch = true, overrideConfig = {}) => {\n  let data = null;\n  let error = null;\n  let loading = false;\n  if (shouldFetch) {\n    loading = true;\n    try {\n      const response = await axios({\n        ...axiosConfig,\n        ...overrideConfig\n      });\n      data = response.data;\n      error = null;\n    } catch (err) {\n      error = err;\n    } finally {\n      loading = false;\n    }\n  }\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_c = API;\nexport default API;\nvar _c;\n$RefreshReg$(_c, \"API\");","map":{"version":3,"names":["axios","API","axiosConfig","shouldFetch","overrideConfig","data","error","loading","response","err","_c","$RefreshReg$"],"sources":["C:/Users/torre/Documents/GitHub/Pugad Maharlika Web App/Pugad-Maharlika-Frontend/client/src/service/API.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = async (axiosConfig, shouldFetch = true, overrideConfig = {}) => {\r\n  let data = null;\r\n  let error = null;\r\n  let loading = false;\r\n\r\n  if (shouldFetch) {\r\n    loading = true;\r\n    try {\r\n      const response = await axios({ ...axiosConfig, ...overrideConfig });\r\n      data = response.data;\r\n      error = null;\r\n    } catch (err) {\r\n      error = err;\r\n    } finally {\r\n      loading = false;\r\n    }\r\n  }\r\n\r\n  return { data, error, loading };\r\n};\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,MAAAA,CAAOC,WAAW,EAAEC,WAAW,GAAG,IAAI,EAAEC,cAAc,GAAG,CAAC,CAAC,KAAK;EAC1E,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,OAAO,GAAG,KAAK;EAEnB,IAAIJ,WAAW,EAAE;IACfI,OAAO,GAAG,IAAI;IACd,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;QAAE,GAAGE,WAAW;QAAE,GAAGE;MAAe,CAAC,CAAC;MACnEC,IAAI,GAAGG,QAAQ,CAACH,IAAI;MACpBC,KAAK,GAAG,IAAI;IACd,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZH,KAAK,GAAGG,GAAG;IACb,CAAC,SAAS;MACRF,OAAO,GAAG,KAAK;IACjB;EACF;EAEA,OAAO;IAAEF,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC;AACjC,CAAC;AAACG,EAAA,GAnBIT,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}